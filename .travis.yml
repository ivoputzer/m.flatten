language: node_js
if: tag IS blank
git:
  depth: 1
node_js:
- 10
- 9
- 8
- 7
- 6
- 5
- 4
cache:
  directories:
  - $HOME/.npm
jobs:
  allow_failures:
  - node_js: 5
  - node_js: 4
  include:
  - stage: lint
    install: skip
    script:
    - npx standard
  - stage: cover
    script:
    - npx nyc --reporter=lcov npm test
    deploy:
    - provider: script
      skip_cleanup: true
      script:
      - npx nyc report --reporter=text-lcov | npx coveralls --verbose
    - provider: pages
      skip_cleanup: true
      local-dir: coverage/lcov-report
      github-token: $GITHUB_TOKEN
      on:
        repo: $TRAVIS_REPO_SLUG
        branch: master
  - stage: push
    install: skip
    script:
    - export PACKAGE_TAR=$(npm pack)
    after_success:
    - export NPM_PACKAGE_VERSION=$(npm --silent run node -- --print process.env.npm_package_version)
    - git tag --list
    - git tag --annotate $NPM_PACKAGE_VERSION --message "v$(npm view $PWD version) â€º v$NPM_PACKAGE_VERSION"
    - git tag --list
    deploy:
    - provider: npm
      email: ivo.putzer@gmail.com
      skip_cleanup: true
      api_key: $NPM_TOKEN
      tags: false
      on:
        repo: $TRAVIS_REPO_SLUG
        branch: master
    - provider: releases
      skip_cleanup: true
      overwrite: false
      draft: true
      # tag_name: $NPM_PACKAGE_VERSION
      # name: $NPM_PACKAGE_VERSION
      api_key: $GITHUB_API_KEY
      file: $PACKAGE_TAR
      overwrite: false
      on:
        repo: $TRAVIS_REPO_SLUG
        branch: master
        # condition: if [ "$BEFORE_DEPLOY_NPM_PACKAGE_VERSION" -ne "$AFTER_DEPLOY_NPM_PACKAGE_VERSION" ]; then true; else false; fi
    # - npm view $PWD version
    # -
    # - git tag -l
  #   after_deploy:
  #   - npm_package_version=
  #   - git rev-parse -q --verify "refs/tags/$npm_package_version" >/dev/null
  #   # - npm run --silent node -- --print "process.env.npm_package_version"
notifications:
  email: false
